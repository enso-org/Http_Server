from Base import all
import Base.Network.Http.Method

polyglot java import com.sun.net.httpserver.HttpServer
polyglot java import java.net.InetSocketAddress


type Method_Handlers
    type Method_Handlers handlers_map

    handle t =
        is = t.getRequestBody
        request_body = Text.from_utf_8 (Vector.Vector is.readAllBytes)
        method = t.getRequestMethod
        handler = this.handlers_map.get_or_else method Nothing
        case handler of
            Nothing ->
                t.sendResponseHeaders 404 0
                t.getResponseBody.close
            h ->
                response = h request_body
                t.sendResponseHeaders 200 response.length
                os = t.getResponseBody
                os.write response.utf_8.to_array
                os.close

    add_handler verb handler_fn =
        verb_str = case verb of
            Method.Get -> "GET"
            Method.Post -> "POST"
        new_handler_map = this.handlers_map.insert verb_str handler_fn
        Method_Handlers new_handler_map


type Server
    type Server java_server route_handlers

    start =
        this.route_handlers.each_with_key path-> handler->
            this.java_server.createContext path handler
        this.java_server.start

    add_route path verb handler_fn =
        existing_handler = this.route_handlers.get_or_else path Nothing
        new_handler = case existing_handler of
            Nothing -> Method_Handlers Map.empty . add_handler verb handler_fn
            handlers -> handlers.add_handler verb handler_fn
        new_route_handlers = this.route_handlers.insert path new_handler
        Server this.java_server new_route_handlers


create ~builder =
    server = HttpServer.create (InetSocketAddress.new 1234) 0
    server.setExecutor Nothing
    State.run Server (Server server Map.empty) <|
        builder
        State.get Server

route path method handler =
    s = State.get Server
    State.put Server (s.add_route path method handler)
